/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { UserModel } from '../../models/user-model';

export interface ApiUserPost$Plain$Params {
  Firstname?: string;
  Birthdate?: string;
  GenderId?: number;
  SexOrientationId?: number;
  Latitude?: number;
  Longitude?: number;
      body?: {
'ImageBase'?: Blob;
}
}

export function apiUserPost$Plain(http: HttpClient, rootUrl: string, params?: ApiUserPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<UserModel>> {
  const rb = new RequestBuilder(rootUrl, apiUserPost$Plain.PATH, 'post');
  if (params) {
    rb.query('Firstname', params.Firstname, {});
    rb.query('Birthdate', params.Birthdate, {});
    rb.query('GenderId', params.GenderId, {});
    rb.query('SexOrientationId', params.SexOrientationId, {});
    rb.query('Latitude', params.Latitude, {});
    rb.query('Longitude', params.Longitude, {});
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'text', accept: 'text/plain', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<UserModel>;
    })
  );
}

apiUserPost$Plain.PATH = 'User';
